"use strict";(self.webpackChunkhb=self.webpackChunkhb||[]).push([[164],{8247:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>c});var p=a(641);const e={},t=(0,a(6262).A)(e,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,s[0]||(s[0]=[(0,p.Fv)('<h1 id="net-core-缓存封装" tabindex="-1"><a class="header-anchor" href="#net-core-缓存封装"><span>.Net Core 缓存封装</span></a></h1><h2 id="抽象类封装-entitycachebase" tabindex="-1"><a class="header-anchor" href="#抽象类封装-entitycachebase"><span>抽象类封装 EntityCacheBase</span></a></h2><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line">    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line">    <span class="token doc-comment comment">/// 分离 业务逻辑和缓存逻辑  如果都不存在 需要返回null 否则缓存不生效</span></span>\n<span class="line">    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line">    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeparam</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>T<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeparam</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line">    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeparam</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TKey<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeparam</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">EntityCacheBase<span class="token punctuation">&lt;</span>T<span class="token punctuation">,</span> TKey<span class="token punctuation">&gt;</span></span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ITransientService</span></span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">protected</span> <span class="token keyword">readonly</span> <span class="token class-name">IMemoryCache</span> _cache<span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">protected</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>EntityCacheBase<span class="token punctuation">&lt;</span>T<span class="token punctuation">,</span> TKey<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">protected</span> <span class="token class-name"><span class="token keyword">string</span></span> cacheName <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span> <span class="token comment">//缓存名称</span></span>\n<span class="line">        <span class="token keyword">protected</span> <span class="token class-name">TKey</span> cacheKey<span class="token punctuation">;</span> <span class="token comment">//缓存key</span></span>\n<span class="line">        <span class="token keyword">protected</span> <span class="token class-name">TimeSpan</span> expiryTime <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//缓存时间</span></span>\n<span class="line">        <span class="token keyword">protected</span> <span class="token class-name">Func<span class="token punctuation">&lt;</span>Task<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> func <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">//具体方法</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">protected</span> <span class="token function">EntityCacheBase</span><span class="token punctuation">(</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token comment">// 可切换 redis 单例</span></span>\n<span class="line">            _cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryCache</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryCacheOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line">\t\t<span class="token doc-comment comment">/// 子类通知需要重写 override 程序运行开始时加载实体监听函数，在数据库实体发生变化时，删除当前缓存</span></span>\n<span class="line">\t\t<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ListenEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token comment">//监听实体变化 更新缓存</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> <span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token class-name">TKey</span> key<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">try</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                cacheKey <span class="token operator">=</span> key<span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">return</span> <span class="token keyword">await</span> _cache<span class="token punctuation">.</span><span class="token function">GetOrCreateAsync</span><span class="token punctuation">(</span>cacheName <span class="token operator">+</span> cacheKey<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> cacheEntry <span class="token operator">=&gt;</span></span>\n<span class="line">                <span class="token punctuation">{</span></span>\n<span class="line">                    cacheEntry<span class="token punctuation">.</span>AbsoluteExpirationRelativeToNow <span class="token operator">=</span> expiryTime<span class="token punctuation">;</span></span>\n<span class="line">                    <span class="token keyword">if</span> <span class="token punctuation">(</span>func <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>\n<span class="line">                    <span class="token punctuation">{</span></span>\n<span class="line">                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InvalidOperationException</span><span class="token punctuation">(</span><span class="token string">&quot;The &#39;func&#39; delegate must be set before calling GetAsync.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                    <span class="token punctuation">}</span></span>\n<span class="line">                    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InvalidOperationException</span><span class="token punctuation">(</span><span class="token string">&quot;The cache returned a null value.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                _logger<span class="token punctuation">?.</span><span class="token function">LogError</span><span class="token punctuation">(</span>ex<span class="token punctuation">,</span> <span class="token string">&quot;Error in GetAsync for key {Key}: {Message}&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InvalidOperationException</span><span class="token punctuation">(</span><span class="token string">&quot;Error in GetAsync: &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Remove</span><span class="token punctuation">(</span><span class="token class-name">TKey</span> key<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            _cache<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>cacheName <span class="token operator">+</span> key<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><blockquote><p>例如我们这个缓存为用户缓存逻辑,我们继承 EntityCacheBase &lt;响应结果实体,传入key的类型&gt; UserRoleCacheService 在其他地方进行构造函数注入,进行使用</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line">    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line">    <span class="token doc-comment comment">/// 用户缓存</span></span>\n<span class="line">    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRoleCacheService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">EntityCacheBase<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>UserRoleItem<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IMysqlSqlSugarClient</span> _mysqlSqlSugarClient<span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token function">UserRoleCacheService</span><span class="token punctuation">(</span><span class="token class-name">IMysqlSqlSugarClient</span> mysqlSqlSugarClient<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            _mysqlSqlSugarClient <span class="token operator">=</span> mysqlSqlSugarClient<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            cacheName <span class="token operator">=</span> <span class="token string">&quot;user:&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">            expiryTime <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromHours</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            func <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token class-name"><span class="token keyword">var</span></span> item <span class="token operator">=</span> <span class="token keyword">await</span> _mysqlSqlSugarClient<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Queryable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">                          <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>IsDeleted <span class="token operator">==</span> EntityStatusEnums<span class="token punctuation">.</span>Normal<span class="token punctuation">)</span></span>\n<span class="line">                          <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Id <span class="token operator">==</span> cacheKey<span class="token punctuation">)</span></span>\n<span class="line">                          <span class="token punctuation">.</span><span class="token function">FirstAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>\n<span class="line">                <span class="token punctuation">{</span></span>\n<span class="line">                    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span></span>\n<span class="line">                <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">await</span> _mysqlSqlSugarClient<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Queryable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UserRole<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">                           <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">LeftJoin</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Role<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>RoleId <span class="token operator">==</span> b<span class="token punctuation">.</span>RoleId<span class="token punctuation">)</span></span>\n<span class="line">                           <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>UserId <span class="token operator">==</span> item<span class="token punctuation">.</span>Id<span class="token punctuation">)</span></span>\n<span class="line">                           <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>IsDeleted <span class="token operator">==</span> EntityStatusEnums<span class="token punctuation">.</span>Normal <span class="token operator">&amp;&amp;</span></span>\n<span class="line">                            b<span class="token punctuation">.</span>IsDeleted <span class="token operator">==</span> EntityStatusEnums<span class="token punctuation">.</span>Normal<span class="token punctuation">)</span></span>\n<span class="line">                           <span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span></span>\n<span class="line">                           <span class="token punctuation">{</span></span>\n<span class="line">                               RoleName <span class="token operator">=</span> b<span class="token punctuation">.</span>RoleName<span class="token punctuation">,</span></span>\n<span class="line">                               RoleId <span class="token operator">=</span> b<span class="token punctuation">.</span>RoleId<span class="token punctuation">,</span></span>\n<span class="line">                               UserId <span class="token operator">=</span> a<span class="token punctuation">.</span>UserId<span class="token punctuation">,</span></span>\n<span class="line">                               b<span class="token punctuation">.</span>Permissions<span class="token punctuation">,</span></span>\n<span class="line">                               <span class="token comment">// b.IsDeleted</span></span>\n<span class="line">                           <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">                           <span class="token punctuation">.</span><span class="token function">ToListAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token class-name"><span class="token keyword">var</span></span> items <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span></span>\n<span class="line">                <span class="token punctuation">{</span></span>\n<span class="line">                    <span class="token class-name"><span class="token keyword">var</span></span> v <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserRoleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                    v<span class="token punctuation">.</span>RoleName <span class="token operator">=</span> x<span class="token punctuation">.</span>RoleName<span class="token punctuation">;</span></span>\n<span class="line">                    v<span class="token punctuation">.</span>RoleId <span class="token operator">=</span> x<span class="token punctuation">.</span>RoleId<span class="token punctuation">;</span></span>\n<span class="line">                    v<span class="token punctuation">.</span>UserId <span class="token operator">=</span> x<span class="token punctuation">.</span>UserId<span class="token punctuation">;</span></span>\n<span class="line">                    v<span class="token punctuation">.</span>Permissions <span class="token operator">=</span> x<span class="token punctuation">.</span>Permissions <span class="token operator">??</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">                    <span class="token keyword">return</span> v<span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">return</span> items<span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6)]))}]]),c=JSON.parse('{"path":"/Net/Cache.html","title":".Net Core 缓存封装","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"抽象类封装 EntityCacheBase","slug":"抽象类封装-entitycachebase","link":"#抽象类封装-entitycachebase","children":[]},{"level":2,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]}],"git":{"updatedTime":1753694486000,"contributors":[{"name":"TuCoke","username":"TuCoke","email":"57646826+TuCoke@users.noreply.github.com","commits":8,"url":"https://github.com/TuCoke"}],"changelog":[{"hash":"fb50b3c8bc756604073fd0ff48923511fcf41f1f","time":1753694486000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Cache.md"},{"hash":"f6ff902b6963efd4a037a2eec6920612e9c987ea","time":1753694312000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Cache.md"},{"hash":"ceec7a4811210a2b84e8488efa98f2eebeac5da1","time":1753694293000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Cache.md"},{"hash":"8a77eaca0bd8cc6b2416496767dc27ed68c34f5b","time":1753689082000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Cache.md"},{"hash":"c817f8b7967936a1e15b73c3b7510d1fe65820c1","time":1753689015000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Cache.md"},{"hash":"1a2b04ab982cd830a775d1b5b3479004c3713d29","time":1753688916000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Rename Cache to Cache.md"},{"hash":"c0f24f09752239e2699db7c8e310a219f0eb5a1a","time":1753688729000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Cache"},{"hash":"c1521e330a407c708e86f7cf63a0a4243dd700bc","time":1753688233000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Create Cache"}]},"filePathRelative":"Net/Cache.md"}')}}]);