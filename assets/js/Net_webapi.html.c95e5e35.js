"use strict";(self.webpackChunkhb=self.webpackChunkhb||[]).push([[590],{1373:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>l});var p=a(641);const e={},t=(0,a(6262).A)(e,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,s[0]||(s[0]=[(0,p.Fv)('<h1 id="net-webapi-示例" tabindex="-1"><a class="header-anchor" href="#net-webapi-示例"><span>.NET WebAPI 示例</span></a></h1><p>本文档将介绍如何使用 .NET 创建一个基本的 WebAPI 应用程序。</p><h2 id="创建-webapi-项目" tabindex="-1"><a class="header-anchor" href="#创建-webapi-项目"><span>创建 WebAPI 项目</span></a></h2><p>使用以下命令创建一个新的 WebAPI 项目：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">dotnet new webapi <span class="token parameter variable">-n</span> MyFirstWebApi</span>\n<span class="line"><span class="token builtin class-name">cd</span> MyFirstWebApi</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h2><p>创建项目后，您将看到以下主要文件和目录：</p><ul><li><code>Program.cs</code> - 应用程序入口点和配置</li><li><code>Controllers/</code> - 包含API控制器</li><li><code>Properties/launchSettings.json</code> - 应用程序启动配置</li><li><code>appsettings.json</code> - 应用程序配置文件</li><li><code>MyFirstWebApi.csproj</code> - 项目文件</li></ul><h2 id="创建模型" tabindex="-1"><a class="header-anchor" href="#创建模型"><span>创建模型</span></a></h2><p>首先，让我们创建一个简单的模型类。在项目根目录下创建一个 <code>Models</code> 文件夹，并添加一个 <code>TodoItem.cs</code> 文件：</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">namespace</span> <span class="token namespace">MyFirstWebApi<span class="token punctuation">.</span>Models</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TodoItem</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Title <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsComplete <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建数据上下文" tabindex="-1"><a class="header-anchor" href="#创建数据上下文"><span>创建数据上下文</span></a></h2><p>接下来，添加一个简单的数据上下文类来模拟数据库。创建一个 <code>Data</code> 文件夹，并添加 <code>AppDbContext.cs</code> 文件：</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>EntityFrameworkCore</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">using</span> <span class="token namespace">MyFirstWebApi<span class="token punctuation">.</span>Models</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">namespace</span> <span class="token namespace">MyFirstWebApi<span class="token punctuation">.</span>Data</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppDbContext</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">DbContext</span></span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token function">AppDbContext</span><span class="token punctuation">(</span><span class="token class-name">DbContextOptions<span class="token punctuation">&lt;</span>AppDbContext<span class="token punctuation">&gt;</span></span> options<span class="token punctuation">)</span></span>\n<span class="line">            <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token return-type class-name">DbSet<span class="token punctuation">&lt;</span>TodoItem<span class="token punctuation">&gt;</span></span> TodoItems <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token operator">!</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置服务" tabindex="-1"><a class="header-anchor" href="#配置服务"><span>配置服务</span></a></h2><p>在 <code>Program.cs</code> 文件中，添加 Entity Framework 服务和数据库配置：</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>EntityFrameworkCore</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">using</span> <span class="token namespace">MyFirstWebApi<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// 添加控制器服务</span></span>\n<span class="line">builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// 添加 Swagger/OpenAPI 支持</span></span>\n<span class="line">builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddEndpointsApiExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSwaggerGen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// 添加数据库上下文</span></span>\n<span class="line">builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddDbContext</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AppDbContext<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span></span>\n<span class="line">    options<span class="token punctuation">.</span><span class="token function">UseInMemoryDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;TodoList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// 配置 HTTP 请求管道</span></span>\n<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>app<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span><span class="token function">IsDevelopment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    app<span class="token punctuation">.</span><span class="token function">UseSwagger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    app<span class="token punctuation">.</span><span class="token function">UseSwaggerUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">app<span class="token punctuation">.</span><span class="token function">UseHttpsRedirection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">app<span class="token punctuation">.</span><span class="token function">UseAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">app<span class="token punctuation">.</span><span class="token function">MapControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">app<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建控制器" tabindex="-1"><a class="header-anchor" href="#创建控制器"><span>创建控制器</span></a></h2><p>在 <code>Controllers</code> 文件夹中，创建 <code>TodoItemsController.cs</code> 文件：</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>AspNetCore<span class="token punctuation">.</span>Mvc</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>EntityFrameworkCore</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">using</span> <span class="token namespace">MyFirstWebApi<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">using</span> <span class="token namespace">MyFirstWebApi<span class="token punctuation">.</span>Models</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">namespace</span> <span class="token namespace">MyFirstWebApi<span class="token punctuation">.</span>Controllers</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;api/[controller]&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span></span>\n<span class="line">    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ApiController</span></span><span class="token punctuation">]</span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TodoItemsController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ControllerBase</span></span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">AppDbContext</span> _context<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token function">TodoItemsController</span><span class="token punctuation">(</span><span class="token class-name">AppDbContext</span> context<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            _context <span class="token operator">=</span> context<span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token comment">// GET: api/TodoItems</span></span>\n<span class="line">        <span class="token punctuation">[</span>HttpGet<span class="token punctuation">]</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>ActionResult<span class="token punctuation">&lt;</span>IEnumerable<span class="token punctuation">&lt;</span>TodoItem<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetTodoItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">return</span> <span class="token keyword">await</span> _context<span class="token punctuation">.</span>TodoItems<span class="token punctuation">.</span><span class="token function">ToListAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token comment">// GET: api/TodoItems/5</span></span>\n<span class="line">        <span class="token punctuation">[</span><span class="token function">HttpGet</span><span class="token punctuation">(</span><span class="token string">&quot;{id}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>ActionResult<span class="token punctuation">&lt;</span>TodoItem<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetTodoItem</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> id<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token class-name"><span class="token keyword">var</span></span> todoItem <span class="token operator">=</span> <span class="token keyword">await</span> _context<span class="token punctuation">.</span>TodoItems<span class="token punctuation">.</span><span class="token function">FindAsync</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>todoItem <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token keyword">return</span> <span class="token function">NotFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token keyword">return</span> todoItem<span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token comment">// POST: api/TodoItems</span></span>\n<span class="line">        <span class="token punctuation">[</span>HttpPost<span class="token punctuation">]</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>ActionResult<span class="token punctuation">&lt;</span>TodoItem<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">PostTodoItem</span><span class="token punctuation">(</span><span class="token class-name">TodoItem</span> todoItem<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            _context<span class="token punctuation">.</span>TodoItems<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>todoItem<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">await</span> _context<span class="token punctuation">.</span><span class="token function">SaveChangesAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token keyword">return</span> <span class="token function">CreatedAtAction</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>GetTodoItem<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> id <span class="token operator">=</span> todoItem<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">,</span> todoItem<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token comment">// PUT: api/TodoItems/5</span></span>\n<span class="line">        <span class="token punctuation">[</span><span class="token function">HttpPut</span><span class="token punctuation">(</span><span class="token string">&quot;{id}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>IActionResult<span class="token punctuation">&gt;</span></span> <span class="token function">PutTodoItem</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> id<span class="token punctuation">,</span> <span class="token class-name">TodoItem</span> todoItem<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>id <span class="token operator">!=</span> todoItem<span class="token punctuation">.</span>Id<span class="token punctuation">)</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token keyword">return</span> <span class="token function">BadRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">            _context<span class="token punctuation">.</span><span class="token function">Entry</span><span class="token punctuation">(</span>todoItem<span class="token punctuation">)</span><span class="token punctuation">.</span>State <span class="token operator">=</span> EntityState<span class="token punctuation">.</span>Modified<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token keyword">try</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token keyword">await</span> _context<span class="token punctuation">.</span><span class="token function">SaveChangesAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">DbUpdateConcurrencyException</span><span class="token punctuation">)</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">TodoItemExists</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line">                <span class="token punctuation">{</span></span>\n<span class="line">                    <span class="token keyword">return</span> <span class="token function">NotFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span></span>\n<span class="line">                <span class="token keyword">else</span></span>\n<span class="line">                <span class="token punctuation">{</span></span>\n<span class="line">                    <span class="token keyword">throw</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token keyword">return</span> <span class="token function">NoContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token comment">// DELETE: api/TodoItems/5</span></span>\n<span class="line">        <span class="token punctuation">[</span><span class="token function">HttpDelete</span><span class="token punctuation">(</span><span class="token string">&quot;{id}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>\n<span class="line">        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>IActionResult<span class="token punctuation">&gt;</span></span> <span class="token function">DeleteTodoItem</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> id<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token class-name"><span class="token keyword">var</span></span> todoItem <span class="token operator">=</span> <span class="token keyword">await</span> _context<span class="token punctuation">.</span>TodoItems<span class="token punctuation">.</span><span class="token function">FindAsync</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>todoItem <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token keyword">return</span> <span class="token function">NotFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">            _context<span class="token punctuation">.</span>TodoItems<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>todoItem<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">await</span> _context<span class="token punctuation">.</span><span class="token function">SaveChangesAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token keyword">return</span> <span class="token function">NoContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">TodoItemExists</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> id<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">return</span> _context<span class="token punctuation">.</span>TodoItems<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>Id <span class="token operator">==</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装必要的包" tabindex="-1"><a class="header-anchor" href="#安装必要的包"><span>安装必要的包</span></a></h2><p>运行以下命令安装所需的 NuGet 包：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">dotnet <span class="token function">add</span> package Microsoft.EntityFrameworkCore.InMemory</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="运行应用程序" tabindex="-1"><a class="header-anchor" href="#运行应用程序"><span>运行应用程序</span></a></h2><p>现在可以运行 WebAPI 应用程序：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">dotnet run</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>默认情况下，应用程序将在 <code>https://localhost:7xxx</code> 和 <code>http://localhost:5xxx</code> 上运行（端口号可能会有所不同）。</p><h2 id="使用-swagger-测试-api" tabindex="-1"><a class="header-anchor" href="#使用-swagger-测试-api"><span>使用 Swagger 测试 API</span></a></h2><p>通过浏览器访问 <code>https://localhost:7xxx/swagger</code> 来打开 Swagger UI 界面，您可以在其中测试 API 的所有端点。</p><h2 id="api-测试示例" tabindex="-1"><a class="header-anchor" href="#api-测试示例"><span>API 测试示例</span></a></h2><p>以下是使用 curl 测试 API 的一些示例：</p><h3 id="创建一个新的待办事项" tabindex="-1"><a class="header-anchor" href="#创建一个新的待办事项"><span>创建一个新的待办事项</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;{<span class="token entity" title="\\&quot;">\\&quot;</span>title<span class="token entity" title="\\&quot;">\\&quot;</span>:<span class="token entity" title="\\&quot;">\\&quot;</span>完成 WebAPI 教程<span class="token entity" title="\\&quot;">\\&quot;</span>,<span class="token entity" title="\\&quot;">\\&quot;</span>isComplete<span class="token entity" title="\\&quot;">\\&quot;</span>:false}&quot;</span> https://localhost:7xxx/api/TodoItems</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="获取所有待办事项" tabindex="-1"><a class="header-anchor" href="#获取所有待办事项"><span>获取所有待办事项</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> GET https://localhost:7xxx/api/TodoItems</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="获取特定待办事项" tabindex="-1"><a class="header-anchor" href="#获取特定待办事项"><span>获取特定待办事项</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> GET https://localhost:7xxx/api/TodoItems/1</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="更新待办事项" tabindex="-1"><a class="header-anchor" href="#更新待办事项"><span>更新待办事项</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> PUT <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;{<span class="token entity" title="\\&quot;">\\&quot;</span>id<span class="token entity" title="\\&quot;">\\&quot;</span>:1,<span class="token entity" title="\\&quot;">\\&quot;</span>title<span class="token entity" title="\\&quot;">\\&quot;</span>:<span class="token entity" title="\\&quot;">\\&quot;</span>完成 WebAPI 教程<span class="token entity" title="\\&quot;">\\&quot;</span>,<span class="token entity" title="\\&quot;">\\&quot;</span>isComplete<span class="token entity" title="\\&quot;">\\&quot;</span>:true}&quot;</span> https://localhost:7xxx/api/TodoItems/1</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="删除待办事项" tabindex="-1"><a class="header-anchor" href="#删除待办事项"><span>删除待办事项</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> DELETE https://localhost:7xxx/api/TodoItems/1</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>在本示例中，我们创建了一个完整的 .NET WebAPI 应用程序，实现了以下功能：</p><ol><li>创建基本的 WebAPI 项目结构</li><li>定义数据模型</li><li>配置 Entity Framework 和内存数据库</li><li>实现 CRUD 操作的 API 控制器</li><li>使用 Swagger 进行 API 文档和测试</li></ol><p>这个示例展示了如何使用 .NET 快速创建功能齐全的 RESTful API。</p>',45)]))}]]),l=JSON.parse('{"path":"/Net/webapi.html","title":".NET WebAPI 示例","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"创建 WebAPI 项目","slug":"创建-webapi-项目","link":"#创建-webapi-项目","children":[]},{"level":2,"title":"项目结构","slug":"项目结构","link":"#项目结构","children":[]},{"level":2,"title":"创建模型","slug":"创建模型","link":"#创建模型","children":[]},{"level":2,"title":"创建数据上下文","slug":"创建数据上下文","link":"#创建数据上下文","children":[]},{"level":2,"title":"配置服务","slug":"配置服务","link":"#配置服务","children":[]},{"level":2,"title":"创建控制器","slug":"创建控制器","link":"#创建控制器","children":[]},{"level":2,"title":"安装必要的包","slug":"安装必要的包","link":"#安装必要的包","children":[]},{"level":2,"title":"运行应用程序","slug":"运行应用程序","link":"#运行应用程序","children":[]},{"level":2,"title":"使用 Swagger 测试 API","slug":"使用-swagger-测试-api","link":"#使用-swagger-测试-api","children":[]},{"level":2,"title":"API 测试示例","slug":"api-测试示例","link":"#api-测试示例","children":[{"level":3,"title":"创建一个新的待办事项","slug":"创建一个新的待办事项","link":"#创建一个新的待办事项","children":[]},{"level":3,"title":"获取所有待办事项","slug":"获取所有待办事项","link":"#获取所有待办事项","children":[]},{"level":3,"title":"获取特定待办事项","slug":"获取特定待办事项","link":"#获取特定待办事项","children":[]},{"level":3,"title":"更新待办事项","slug":"更新待办事项","link":"#更新待办事项","children":[]},{"level":3,"title":"删除待办事项","slug":"删除待办事项","link":"#删除待办事项","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"updatedTime":1748176960000,"contributors":[{"name":"Bo-Hong","username":"Bo-Hong","email":"2764136779@qq.com","commits":1,"url":"https://github.com/Bo-Hong"}],"changelog":[{"hash":"f6f4b819781db4ef3598c7eb9b802988220226fd","time":1748176960000,"email":"2764136779@qq.com","author":"Bo-Hong","message":"文档合并"}]},"filePathRelative":"Net/webapi.md"}')}}]);