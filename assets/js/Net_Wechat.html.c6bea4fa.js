"use strict";(self.webpackChunkhb=self.webpackChunkhb||[]).push([[290],{4610:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>e,data:()=>c});var p=a(641);const t={},e=(0,a(6262).A)(t,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,s[0]||(s[0]=[(0,p.Fv)('<h1 id="netcore-公众号扫码回复临时登录功能" tabindex="-1"><a class="header-anchor" href="#netcore-公众号扫码回复临时登录功能"><span>NetCore 公众号扫码回复临时登录功能</span></a></h1><blockquote><p>个人公众号如何实现一个简单的回复关键字登录 xml格式通讯,需要自己准备一个xml转化工具</p></blockquote><h3 id="流程" tabindex="-1"><a class="header-anchor" href="#流程"><span>流程</span></a></h3><blockquote><p>1.根据微信公众号文档,首先配置接口地址. 2.根据用户关注后回复验证码 为关键字,随机生成一串数字为验证码,发送给用户. 3.用户填写后,点击登录即完成登录功能.</p></blockquote><h3 id="_1-第一步-配置微信公众号后台接口地址" tabindex="-1"><a class="header-anchor" href="#_1-第一步-配置微信公众号后台接口地址"><span>1. 第一步：配置微信公众号后台接口地址</span></a></h3><p>在微信公众号后台配置接口地址，如下所示： <img src="https://github.com/user-attachments/assets/99d82936-412e-4db8-b5c4-1147f246ef77" alt="微信公众号配置"></p><h3 id="_2-第二步-代码配置" tabindex="-1"><a class="header-anchor" href="#_2-第二步-代码配置"><span>2. 第二步：代码配置</span></a></h3><p>我们需要设置一个 GET 请求以响应微信的请求，以及一个 POST 请求来接收微信发送过来的 XML 数据。</p><h3 id="_3-api-接口层" tabindex="-1"><a class="header-anchor" href="#_3-api-接口层"><span>3. API 接口层</span></a></h3><details><summary>API 接口层代码</summary><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token doc-comment comment">/// 微信公众号配置 验证token</span></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>echostr<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token punctuation">[</span>AllowAnonymous<span class="token punctuation">]</span></span>\n<span class="line"><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Token&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>  <span class="token comment">// 微信公众号后台配置的地址url</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token return-type class-name">IActionResult</span> <span class="token function">Token</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> echostr<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">Content</span><span class="token punctuation">(</span>echostr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token doc-comment comment">/// 微信公众号配置 接收 微信 xml body内容</span></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>signature<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>timestamp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nonce<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>openid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span></span>\n<span class="line"><span class="token punctuation">[</span>AllowAnonymous<span class="token punctuation">]</span></span>\n<span class="line"><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpPost</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Token&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>IActionResult<span class="token punctuation">&gt;</span></span> <span class="token function">Token</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> signature<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> timestamp<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> nonce<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> openid<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">try</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">using</span> <span class="token class-name">StreamReader<span class="token punctuation">?</span></span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name"><span class="token keyword">var</span></span> xmlStr <span class="token operator">=</span> <span class="token keyword">await</span> reader<span class="token punctuation">.</span><span class="token function">ReadToEndAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token comment">// Log the incoming request if needed</span></span>\n<span class="line">        <span class="token comment">// Logger.Info(LoggerType.Login, $&quot;WeChat Request: {xmlStr}&quot;, null, null);</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token class-name"><span class="token keyword">var</span></span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WeChatRequest</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            XmlData <span class="token operator">=</span> xmlStr<span class="token punctuation">,</span></span>\n<span class="line">            Signature <span class="token operator">=</span> signature<span class="token punctuation">,</span></span>\n<span class="line">            Timestamp <span class="token operator">=</span> timestamp<span class="token punctuation">,</span></span>\n<span class="line">            Nonce <span class="token operator">=</span> nonce</span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">await</span> _messageHandle<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token function">Content</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&quot;text/xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 注意为xml格式</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// Log the error</span></span>\n<span class="line">        Logger<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>LoggerType<span class="token punctuation">.</span>Login<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">$&quot;WeChat API Error: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span>StackTrace<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token function">Content</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_4-handle-接收微信-xml-格式" tabindex="-1"><a class="header-anchor" href="#_4-handle-接收微信-xml-格式"><span>4. Handle 接收微信 XML 格式</span></a></h3><details><summary>处理 Handle 接收微信 XML 格式</summary><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">Handle</span><span class="token punctuation">(</span><span class="token class-name">WeChatRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">CancellationToken</span> cancellationToken <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name"><span class="token keyword">var</span></span> dicData <span class="token operator">=</span> <span class="token function">XmlToDic</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>XmlData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name"><span class="token keyword">var</span></span> msgType <span class="token operator">=</span> dicData<span class="token punctuation">[</span><span class="token string">&quot;MsgType&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>msgType <span class="token operator">==</span> <span class="token string">&quot;event&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name"><span class="token keyword">var</span></span> eventType <span class="token operator">=</span> dicData<span class="token punctuation">[</span><span class="token string">&quot;Event&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>eventType <span class="token operator">==</span> <span class="token string">&quot;subscribe&quot;</span> <span class="token operator">||</span> eventType <span class="token operator">==</span> <span class="token string">&quot;unsubscribe&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token comment">// 关注或取消关注事件</span></span>\n<span class="line">            <span class="token class-name"><span class="token keyword">var</span></span> ev <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WechatsubscribeEvent</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                OpenId <span class="token operator">=</span> dicData<span class="token punctuation">[</span><span class="token string">&quot;FromUserName&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">                IsSubscribe <span class="token operator">=</span> eventType <span class="token operator">==</span> <span class="token string">&quot;subscribe&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token comment">// 将 OpenId 存储在缓存中以便临时登录验证</span></span>\n<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span>IsSubscribe<span class="token punctuation">)</span></span>\n<span class="line">            <span class="token punctuation">{</span></span>\n<span class="line">                _cacheService<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;wechat:openid:&quot;</span> <span class="token operator">+</span> ev<span class="token punctuation">.</span>OpenId<span class="token punctuation">,</span> ev<span class="token punctuation">.</span>OpenId<span class="token punctuation">,</span> <span class="token number">86400</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 存储 24 小时</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token class-name"><span class="token keyword">var</span></span> hasEventKey <span class="token operator">=</span> dicData<span class="token punctuation">.</span><span class="token function">TryGetValue</span><span class="token punctuation">(</span><span class="token string">&quot;EventKey&quot;</span><span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">object</span></span> oEventKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>hasEventKey<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token comment">// 处理 EventKey 逻辑</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">else</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name"><span class="token keyword">var</span></span> v <span class="token operator">=</span> <span class="token punctuation">(</span>ResponseMsgType<span class="token punctuation">)</span>Enum<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">ResponseMsgType</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgType<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">switch</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">case</span> ResponseMsgType<span class="token punctuation">.</span>Empty<span class="token punctuation">:</span></span>\n<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token keyword">case</span> ResponseMsgType<span class="token punctuation">.</span>Text<span class="token punctuation">:</span></span>\n<span class="line">                <span class="token class-name"><span class="token keyword">var</span></span> xmlbody <span class="token operator">=</span> Util<span class="token punctuation">.</span><span class="token function">ClearXmlHeader</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>XmlData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token class-name">MessageBase</span> obj <span class="token operator">=</span> <span class="token punctuation">(</span>MessageBase<span class="token punctuation">)</span>_xmlSerializer<span class="token punctuation">.</span><span class="token function">Deserialize</span><span class="token punctuation">(</span>xmlbody<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">                <span class="token comment">// 获取用户发送的文本内容</span></span>\n<span class="line">                <span class="token class-name"><span class="token keyword">var</span></span> userContent <span class="token operator">=</span> dicData<span class="token punctuation">[</span><span class="token string">&quot;Content&quot;</span><span class="token punctuation">]</span><span class="token punctuation">?.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">?.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token class-name"><span class="token keyword">var</span></span> fromUserName <span class="token operator">=</span> dicData<span class="token punctuation">[</span><span class="token string">&quot;FromUserName&quot;</span><span class="token punctuation">]</span><span class="token punctuation">?.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token class-name"><span class="token keyword">var</span></span> toUserName <span class="token operator">=</span> dicData<span class="token punctuation">[</span><span class="token string">&quot;ToUserName&quot;</span><span class="token punctuation">]</span><span class="token punctuation">?.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">                <span class="token comment">// 检查用户是否发送了&quot;验证码&quot;</span></span>\n<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>userContent<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> userContent<span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span><span class="token string">&quot;验证码&quot;</span><span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line">                <span class="token punctuation">{</span></span>\n<span class="line">                    <span class="token comment">// 使用加密安全的随机数生成 6 位验证码</span></span>\n<span class="line">                    <span class="token class-name"><span class="token keyword">var</span></span> verificationCode <span class="token operator">=</span> <span class="token function">GenerateSecureVerificationCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                    </span>\n<span class="line">                    <span class="token comment">// 将验证码与 OpenId 存储</span></span>\n<span class="line">                    <span class="token class-name"><span class="token keyword">var</span></span> openId <span class="token operator">=</span> obj<span class="token punctuation">.</span>FromUserName<span class="token punctuation">;</span></span>\n<span class="line">                    _cacheService<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;code:&quot;</span> <span class="token operator">+</span> verificationCode<span class="token punctuation">,</span> verificationCode<span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                    _cacheService<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;openid:&quot;</span> <span class="token operator">+</span> verificationCode<span class="token punctuation">,</span> openId<span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">                    <span class="token comment">// 构造回复消息 XML</span></span>\n<span class="line">                    <span class="token class-name"><span class="token keyword">var</span></span> replyXml <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$@&quot;&lt;xml&gt;</span>\n<span class="line">                                        &lt;ToUserName&gt;&lt;![CDATA[</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">obj<span class="token punctuation">.</span>FromUserName</span><span class="token punctuation">}</span></span><span class="token string">]]&gt;&lt;/ToUserName&gt;</span>\n<span class="line">                                        &lt;FromUserName&gt;&lt;![CDATA[</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">obj<span class="token punctuation">.</span>ToUserName</span><span class="token punctuation">}</span></span><span class="token string">]]&gt;&lt;/FromUserName&gt;</span>\n<span class="line">                                        &lt;CreateTime&gt;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">DateTimeOffset<span class="token punctuation">.</span>UtcNow<span class="token punctuation">.</span><span class="token function">ToUnixTimeSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&lt;/CreateTime&gt;</span>\n<span class="line">                                        &lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;</span>\n<span class="line">                                        &lt;Content&gt;&lt;![CDATA[您的验证码是：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">verificationCode</span><span class="token punctuation">}</span></span><span class="token string">，有效期3分钟，请妥善保管。]]&gt;&lt;/Content&gt;</span>\n<span class="line">                                    &lt;/xml&gt;&quot;</span></span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">                    <span class="token keyword">return</span> replyXml<span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">default</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">await</span> Task<span class="token punctuation">.</span>CompletedTask<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="_5-登录实现" tabindex="-1"><a class="header-anchor" href="#_5-登录实现"><span>5. 登录实现</span></a></h4><blockquote><p>我们使用 _cacheService 缓存来实现记录用户的openid,来存储判断用户是否已经登录过了. 根据 verificationCode 来判断用户 输入的验证码是否正确 登陆给用户添加默认角色.颁发token 登录逻辑都不同,这里就不展示代码了</p></blockquote>',14)]))}]]),c=JSON.parse('{"path":"/Net/Wechat.html","title":"NetCore 公众号扫码回复临时登录功能","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"流程","slug":"流程","link":"#流程","children":[]},{"level":3,"title":"1. 第一步：配置微信公众号后台接口地址","slug":"_1-第一步-配置微信公众号后台接口地址","link":"#_1-第一步-配置微信公众号后台接口地址","children":[]},{"level":3,"title":"2. 第二步：代码配置","slug":"_2-第二步-代码配置","link":"#_2-第二步-代码配置","children":[]},{"level":3,"title":"3. API 接口层","slug":"_3-api-接口层","link":"#_3-api-接口层","children":[]},{"level":3,"title":"4. Handle 接收微信 XML 格式","slug":"_4-handle-接收微信-xml-格式","link":"#_4-handle-接收微信-xml-格式","children":[]}],"git":{"updatedTime":1753693969000,"contributors":[{"name":"TuCoke","username":"TuCoke","email":"57646826+TuCoke@users.noreply.github.com","commits":5,"url":"https://github.com/TuCoke"}],"changelog":[{"hash":"4b5694706bd70d8be0e675457f58777fce07240f","time":1753693969000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Wechat.md"},{"hash":"74d55e4fda13d9b47197aa7f2d7ec66e9eef6ddc","time":1753693849000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Wechat.md"},{"hash":"05d7dd0d52bac06477bd040e2a9bdb0b4ec79020","time":1753693620000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Wechat.md"},{"hash":"c2fc3bd569f73b9b3c358663b9608a1174b1d511","time":1753693198000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Update Wechat.md"},{"hash":"f63660f4687c9b9a1b12c8f0eb03b9b3a83e5767","time":1753690401000,"email":"57646826+TuCoke@users.noreply.github.com","author":"subman","message":"Create Wechat.md"}]},"filePathRelative":"Net/Wechat.md"}')}}]);